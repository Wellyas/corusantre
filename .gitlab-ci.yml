image:
  name: "$CI_TEMPLATE_REGISTRY_HOST/gitlab-org/terraform-images/releases/1.1:v0.43.0"

variables:
  TF_ROOT: ${CI_PROJECT_DIR}  # The relative path to the root directory of the Terraform project
  TF_STATE_NAME: default      # The name of the state file used by the GitLab Managed Terraform state backend
  AWS_ACCESS_KEY_ID: $TF_VAR_access_key
  AWS_SECRET_ACCESS_KEY: $TF_VAR_access_key
  HTTPS_PROXY: http://proxy.csoc.thales:328/

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

.terraform:fmt: &terraform_fmt
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform fmt
  allow_failure: true

.terraform:validate: &terraform_validate
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform validate

.terraform:build: &terraform_build
  stage: build
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform plan
    - gitlab-terraform plan-json
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

.terraform:deploy: &terraform_deploy
  stage: deploy
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform apply
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual


